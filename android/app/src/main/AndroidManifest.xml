<manifest xmlns:android="http://schemas.android.com/apk/res/android">

  <!-- Permissions -->
  <uses-permission
    android:name="android.permission.SCHEDULE_EXACT_ALARM" />
  <uses-permission
    android:name="android.permission.USE_EXACT_ALARM" /> <!-- Needed for API 33+ along
  with SCHEDULE_EXACT_ALARM -->
  <uses-permission
    android:name="android.permission.POST_NOTIFICATIONS" /> <!-- Needed for API 33+
  for foreground service notification -->
  <uses-permission
    android:name="android.permission.FOREGROUND_SERVICE" />
  <uses-permission
    android:name="android.permission.FOREGROUND_SERVICE_MEDIA_PLAYBACK" /> <!-- Needed
  for API 34+ if playing audio -->
  <uses-permission
    android:name="android.permission.WAKE_LOCK" /> <!-- Keep CPU awake -->
  <uses-permission
    android:name="android.permission.RECEIVE_BOOT_COMPLETED" /> <!-- To reschedule
  alarms after reboot -->

  <!-- flutter_overlay_window -->
  <uses-permission
    android:name="android.permission.SYSTEM_ALERT_WINDOW" />

  <uses-permission
    android:name="android.permission.FOREGROUND_SERVICE_SPECIAL_USE" />

 <uses-permission
    android:name="android.permission.REQUEST_IGNORE_BATTERY_OPTIMIZATIONS" /> --> <application
    android:label="shake_wake"
    android:name="${applicationName}"
    android:icon="@mipmap/ic_launcher">
    <activity
      android:name=".MainActivity"
      android:exported="true"
      android:launchMode="singleTop"
      android:taskAffinity=""
      android:theme="@style/LaunchTheme"
      android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
      android:hardwareAccelerated="true"
      android:windowSoftInputMode="adjustResize">
      <!-- Specifies an Android theme to apply to this Activity as soon as
                 the Android process has started. This theme is visible to the user
                 while the Flutter UI initializes. After that, this theme continues
                 to determine the Window background behind the Flutter UI. -->
      <meta-data
        android:name="io.flutter.embedding.android.NormalTheme"
        android:resource="@style/NormalTheme"
      />
      <intent-filter>
        <action android:name="android.intent.action.MAIN" />
        <category android:name="android.intent.category.LAUNCHER" />
      </intent-filter>
    </activity>

    <!-- Services required by plugins -->
    <service android:name="com.ryanheise.audioservice.AudioService">...</service> <!-- If using
    audioplayers bg mode -->

    <receiver android:exported="false"
      android:name="com.dexterous.flutterlocalnotifications.ScheduledNotificationReceiver" />
    <receiver android:exported="false"
      android:name="com.dexterous.flutterlocalnotifications.ScheduledNotificationBootReceiver">
      <intent-filter>
        <action android:name="android.intent.action.BOOT_COMPLETED" />
        <action android:name="android.intent.action.MY_PACKAGE_REPLACED" />
        <action android:name="android.intent.action.QUICKBOOT_POWERON" />
        <action android:name="com.htc.intent.action.QUICKBOOT_POWERON" />
      </intent-filter>
    </receiver>

    <service android:name="dev.fluttercommunity.plus.android_intent.AndroidIntentPlugin" />

    <service android:name="flutter.overlay.window.flutter_overlay_window.OverlayService"
      android:exported="false"
      android:foregroundServiceType="specialUse">
      <property android:name="android.app.PROPERTY_SPECIAL_USE_FGS_SUBTYPE"
        android:value="explanation_for_special_use" />
    </service>

    <service
      android:name="dev.fluttercommunity.plus.androidalarmmanager.AlarmService"
      android:permission="android.permission.BIND_JOB_SERVICE"
      android:exported="false" />
    <receiver
      android:name="dev.fluttercommunity.plus.androidalarmmanager.AlarmBroadcastReceiver"
      android:exported="false" />
    <receiver
      android:name="dev.fluttercommunity.plus.androidalarmmanager.RebootBroadcastReceiver"
      android:enabled="false"
      android:exported="false">
      <intent-filter>
        <action android:name="android.intent.action.BOOT_COMPLETED" />
      </intent-filter>
    </receiver>
    <!-- flutter_background_service -->
    <service android:name="id.flutter.flutter_background_service.BackgroundService"
      android:foregroundServiceType="mediaPlayback"
    />

    <!-- Don't delete the meta-data below.
             This is used by the Flutter tool to generate GeneratedPluginRegistrant.java -->
    <meta-data
      android:name="flutterEmbedding"
      android:value="2" />
  </application>
  <!-- Required to query activities that can process text, see:
         https://developer.android.com/training/package-visibility and
         https://developer.android.com/reference/android/content/Intent#ACTION_PROCESS_TEXT.

         In particular, this is used by the Flutter engine in io.flutter.plugin.text.ProcessTextPlugin. -->
  <queries>
    <intent>
      <action android:name="android.intent.action.PROCESS_TEXT" />
      <data android:mimeType="text/plain" />
    </intent>
  </queries>
</manifest>
